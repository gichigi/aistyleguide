---
description: 
globs: 
alwaysApply: false
---
# AI Style Guide Generator - Project Scratchpad

## üìã Project Overview
Web app that generates brand style guides from website URLs using AI to extract and analyze brand elements. Built with Next.js, TypeScript, Tailwind CSS, OpenAI API, and Stripe.

## üéØ Core User Journey
1. **Landing Page** ‚Üí Enter website URL or create manually
2. **Website Analysis** ‚Üí AI extracts brand info and autofills form
3. **Brand Details** ‚Üí User reviews/edits brand information  
4. **Preview** ‚Üí Shows partial style guide with paywall
5. **Payment** ‚Üí Stripe checkout for full access
6. **Email Capture** ‚Üí Collects email for thank you & abandoned cart recovery
7. **Full Access** ‚Üí Complete style guide with download options

## ‚úÖ Recently Completed

### Latest (Jan 2025)
- ‚úÖ **Error Handling Enhancement** - Comprehensive error messages, retry options, fallback handling with network-specific detection, input validation, and user journey tracking
- ‚úÖ **Enhanced Brand Details UX** - Auto-population of brand name + formatted descriptions with paragraph breaks for better readability
- ‚úÖ **Voice Trait UI Cleanup** - Removed redundant "Choose from preset traits" subheading  
- ‚úÖ **Homepage Icon Update** - Changed www/globe icon to AI sparkle icon for clearer AI functionality indication
- ‚úÖ **Input Field Width Fix** - Removed excessive right padding (sm:pr-40) that was making text area too narrow
- ‚úÖ **Placeholder Text Update** - Changed to "Enter the URL or add a short description" for better clarity
- ‚úÖ **Paywall UX Optimization** - Verified existing implementation has good conversion features (pricing transparency, fade-out, mobile responsive)
- ‚úÖ **Custom Voice Traits** - Users can add custom traits alongside predefined ones, AI generates matching descriptions, hybrid quality approach
- ‚úÖ **Enhanced Brand Input** - Homepage accepts URLs + text descriptions, AI expansion
- ‚úÖ **Voice Traits Integration** - Selected traits now influence AI-generated style rules
- ‚úÖ **Email Automation** - Thank you emails using stripe webhook
- ‚úÖ **Comparison Table** - Professional "Why choose AIStyleGuide" landing page section
- ‚úÖ **Abandoned Cart System** - Full email capture & recovery system with Vercel Cron, Supabase storage, founder-style emails, COMEBACK20 discount, 2-hour detection, duplicate prevention

### Foundation (2024)
- ‚úÖ **Core Journey** - Complete user flow from landing ‚Üí analysis ‚Üí preview ‚Üí payment ‚Üí delivery
- ‚úÖ **Production Ready** - Type safety, security, performance, mobile responsiveness

## üöß Active Tasks

### **üÜï P1: Preview Loading UX Optimization** 
*Remove loading interstitial, show processing state on button instead*

**Current State:** Separate loading page before preview
**Target State:** Instant preview with inline loading states
**Benefits:** Faster perceived performance, less friction

**Implementation:**
- Show preview immediately with skeleton loading
- Add processing indicators on action buttons
- Remove full-page loading states
- Improve transition animations

### **üÜï P2: Mobile Conversion Optimization**
*Shorten fade-out effect, optimize mobile paywall dialog*

**Current Mobile Issues:**
- Paywall dialog may be too large on small screens
- Fade-out effect could be more aggressive
- Touch targets could be optimized

**Quick Wins:**
- Reduce fade-out height on mobile
- Optimize dialog sizing and scrolling
- Improve touch target sizes



### **üÜï FUTURE: Freemium Pricing Strategy**
*Move auth gate after preview, implement tiered value*

**Implementation:**
- **Basic Style Guide (FREE)**: 10 core rules + voice traits, view + download
- **Full Style Guide ($99)**: 25+ rules + examples + formats  
- **Complete Guide ($149)**: 99+ rules + custom branding + team features

**Benefits:**
- Users see real value before paying
- Lower barrier to entry ‚Üí more trials
- Higher conversion ‚Üí proven value
- Reduces purchase anxiety

### **üÜï FUTURE: Authentication System**
*Add user accounts when ready to scale with usage limits*

**When to Implement:**
- ‚úÖ Proven conversion on paid tiers
- ‚úÖ Users asking to "save guides"
- ‚úÖ Clear usage patterns established
- ‚úÖ Email marketing campaigns ready

**Features:**
1. Core Style Guide: Free
2. Complete Style Guide: $149
3. Enterprise: Contact Us

**Technical Requirements:**
- User authentication system
- Usage tracking and limits
- User dashboard for guide history
- Email automation for upgrade campaigns
- Tier-based feature gating

## üìö Key Lessons Learned

### Technical Architecture
- **Template consistency is critical** - Always use shared MarkdownComponents for uniform styling across all generated content
- **Type safety prevents runtime errors** - Add type guards before accessing potentially undefined values, especially with AI responses

### User Experience  
- **Mobile-first + loading states** - Most users access on mobile, always provide feedback instead of blank screens
- **Payment UX strategy** - Static previews save OpenAI costs, full generation only post-payment with clear pricing/flow

### AI Integration
- **OpenAI responses need validation** - Always check format, handle edge cases, use chunked generation for reliability
- **Cost optimization matters** - GPT-3.5 for extraction, GPT-4 for generation, 10k character limits prevent token overruns

### Development Process
- **Data flow validation + error handling** - Test through all system layers, detailed logs for debugging, graceful API failure degradation
- **Parallel tool usage** - Use multiple tools simultaneously for efficiency during development

### Email Integration
- **Professional delivery best practices** - HTML + text versions, inline CSS, clear CTAs, respect consent, track sent emails to prevent spam
- **Stripe abandoned cart setup** - Requires promotional consent, 30-day recovery URL expiry, discount codes increase conversion rates

### Node.js ESM Module Caching
- **ESM cache cannot be cleared** - Unlike CommonJS, no invalidation API exists, use dynamic imports + query parameters for dev hot reloading
- **Memory leak warning** - Cache busting creates permanent entries, only use in development mode

### Email Template Mystery (Unresolved)  
- **Problem**: Getting old email template despite code changes, confirmed NOT Stripe auto-emails (disabled in dashboard)
- **Applied fixes**: ESM cache busting, server restarts, cleared .next cache - still persists, needs webhook debugging

### Development Workflow
- **Stripe testing setup** - Test mode first with CLI webhooks, clean test/live config separation, real emails in test mode

### Custom Voice Traits Implementation
- **Hybrid approach works best** - Keep expert descriptions for predefined traits, generate AI descriptions for custom traits in identical format
- **Type safety for complex UIs** - Union types (`MixedTrait`) with type guards prevent runtime errors and enable proper validation
- **Technical debt compounds quickly** - Duplicate template processing functions created maintenance burden; clean up early to prevent confusion
- **Quality consistency matters** - Users notice format inconsistencies; match AI-generated content exactly to existing patterns
- **Focused AI prompts perform better** - Single trait generation with specific format requirements more reliable than bulk generation
- **Error handling should be invisible** - Graceful fallbacks with clear manual editing instructions maintain user flow when AI fails

### Abandoned Cart System Implementation (Jan 2025)
- **Session bridging is critical** - Use Stripe's `client_reference_id` to link early email capture with payment completion
- **Vercel Cron > in-memory schedulers** - Server restarts kill in-memory jobs; Vercel Cron is persistent and reliable
- **Duplicate prevention essential** - Database flag (`abandoned_email_sent`) prevents spam; mark as sent after successful email
- **Progressive disclosure UX works** - Email field appears when form is ready, not on page load - reduces cognitive load
- **Founder-style emails convert better** - Personal tone ("I get it - take your time") outperforms corporate messaging
- **Supabase integration straightforward** - Simple CRUD operations, good for rapid prototyping, handles concurrent access well
- **Environment variables matter** - Dynamic base URLs prevent hardcoded localhost issues in development vs production
- **Comprehensive debugging saves time** - Performance monitoring, error logging, and test commands prevent future headaches
- **TypeScript error handling** - Use helper functions for `unknown` error types to satisfy strict type checking

**üîß Debugging Reference**: See `DEBUG_EMAIL_CAPTURE.md` for troubleshooting common email capture issues, API testing commands, and error code reference.

## üó∫Ô∏è Future Roadmap

### **üÜï PRIORITY: Freemium Pricing Strategy (Option C)**
*Move auth gate after preview, implement tiered value*

**Implementation:**
1. Core Style Guide: Free
2. Complete Style Guide: $149
3. Enterprise: Contact Us

**Benefits:**
- Users see real value before paying
- Lower barrier to entry ‚Üí more trials
- Higher conversion ‚Üí proven value
- Reduces purchase anxiety

**Technical Changes Needed:**
- Update template processor to handle free tier limits
- Modify auth flow to gate features, not preview
- Add tier-based content generation
- Update payment flow and pricing modals

### **üÜï FUTURE: Freemium + Auth Strategy (Turboscribe Model)**
*Add authentication when ready to scale with usage limits*

**Freemium Structure:**
1. Core Style Guide: Free
2. Complete Style Guide: $149
3. Enterprise: Contact Us

**Implementation Phases:**
1. **Phase 1**: No auth, focus on product-market fit and core experience
2. **Phase 2**: Add freemium + auth when conversion proven

**Auth Benefits with Free Tier:**
- Track usage limits 
- Prevent abuse of free tier
- User dashboard ("Your previous guides")
- Email nurturing for upgrades
- Personalization and saved guides

**When to Add Auth:**
- ‚úÖ Proven conversion on paid tiers
- ‚úÖ Users asking to "save guides"
- ‚úÖ Clear usage patterns established
- ‚úÖ Email marketing campaigns ready

**Technical Requirements for Phase 2:**
- User authentication system
- Usage tracking and limits
- User dashboard for guide history
- Email automation for upgrade campaigns
- Tier-based feature gating

### **üéØ FUTURE: Copywriter-First Rebuild (Separate Branch)**
*Transform from "quick generator" to "professional copywriter tool"*

**Critical Priority (P0):**
- **Copy Audit Engine** - Violation detection (passive voice, sentence length, jargon, spelling inconsistencies)
- **Error handling enhancement** - Better error messages, retry options, fallback handling
- **Product Quality Assurance** - Ensure all 25 style rules display correctly, validate download functionality
- **Payment Flow Polish** - Add real-time generation status tracking, better success page UX

**High Priority (P1):**
- **Dynamic Questionnaire UI** - Pre-populated form based on audit findings, smart defaults with user override
- **Preview Mode with Regeneration** - Side panel preview, section-by-section regeneration, violation‚Üírule connections
- **Watermarked PDF Samples** - Free 4-page preview with watermark to prove value before purchase

**Medium Priority (P2):**
- **Mobile Conversion Optimization** - Shorten fade-out effect, optimize mobile paywall dialog  
- **Preview loading UX** - Remove loading interstitial, show processing state on button instead
- **Composable Prompt System** - Modular prompts for section regeneration without full rebuild

**Low Priority (P3):**
- **Email Features** - Style guide delivery via email, welcome/onboarding sequence
- **Automated testing** - Add tests for API routes and template processing
- **Analytics integration** - Track user behavior and conversion metrics
- **Performance monitoring** - Add logging and monitoring for production issues

### **Layout Testing & UX Optimization (Completed)**
**Side Panel Layout Implementation:**
- ‚úÖ **Test page created** at `/test-layout` - Full form with side-panel trait selection
- ‚úÖ **Complete form structure** - Brand name, description, language/formality dropdowns, voice traits
- ‚úÖ **Side-by-side layout** - Left panel (trait selection), Right panel (live preview)
- ‚úÖ **Mobile responsive** - Traits stack below form on small screens

**Layout Options Explored:**
- **Option A: Side Panel** - Selection left, preview right (implemented in test)
- **Option B: Collapsible Cards** - Compact with expand/collapse
- **Option C: Modal/Drawer** - Trait details in overlays

### **Email Setup Required**
- **Need**: Resend API key from dashboard
- **Need**: Domain verification (DNS records for aistyleguide.com)
- **Current**: Using placeholder API key `re_your_api_key_here`

### **Testing Needed**
- **Abandoned Cart Flow**: Test 2-hour session expiration
- **Email Templates**: Verify HTML rendering across email clients
- **Discount Codes**: Test recovery URL functionality

### Medium Term (1-2 months)  
- **Advanced customization options** - Allow users to modify generated style guides
- **Template variety** - Add different style guide formats and structures
- **Export enhancements** - Better PDF styling, additional formats (JSON, Figma)
- **User dashboard** - Allow users to manage multiple purchased guides

### Long Term (3+ months)
- **Team collaboration features** - Share guides within organizations
- **API for developers** - Allow programmatic access to style guide generation
- **White-label solution** - Allow agencies to rebrand and resell the tool
- **Advanced AI features** - Visual brand analysis, competitive analysis integration

## üîß Technical Notes

### Current Architecture
- **Frontend**: Next.js 14, TypeScript, Tailwind CSS, Lucide Icons
- **terminal**: Always use pnpm instead of NPM for packagae install
- **Backend**: Next.js API routes, OpenAI API, Stripe integration
- **Storage**: localStorage for client state, sessionStorage for temporary data
- **Templates**: Markdown-based with variable replacement system
- **Styling**: Tailwind Typography, shared MarkdownComponents, dark mode support

### Key Files & Directories
- `app/page.tsx` - Landing page with URL input
- `app/brand-details/page.tsx` - Brand information form  
- `app/preview/page.tsx` - Style guide preview with paywall
- `app/full-access/page.tsx` - Complete style guide display
- `app/api/extract-website/` - Website analysis and brand extraction
- `app/api/generate-styleguide/` - Full style guide generation
- `app/api/preview/` - Preview content generation (static)
- `lib/template-processor.ts` - Template loading and processing
- `lib/markdown-components.tsx` - Shared markdown rendering components
- `templates/core_template.md` - Main style guide template

### Performance Optimizations
- **Parallel API calls** - Website analysis fetches multiple pages simultaneously
- **Model selection** - GPT-3.5-turbo for extraction, GPT-4 for generation
- **Content optimization** - 10k character limit for AI processing
- **Request timeouts** - 5-second timeout to prevent hanging requests
- **Static previews** - No AI costs for preview generation

### Security Measures  
- **No test endpoints in production** - All testing moved inline or removed
- **Input validation** - All form inputs validated on client and server
- **Rate limiting considerations** - Timeouts and error handling for external requests
- **Credit protection** - Static previews prevent unnecessary OpenAI usage

### Email Service (`lib/email-service.ts`)
- **Provider**: Resend (developer-friendly, good deliverability)
- **Current**: Only thank you emails post-payment
- **Planned**: Early capture emails, abandoned cart sequence, discount codes
- **Features**: HTML + text versions, professional styling, spam prevention

### Stripe Configuration
- **Email Capture**: `consent_collection.promotions = 'auto'`
- **Session Expiry**: 2 hours for abandoned cart recovery
- **Recovery URLs**: 30-day validity with discount codes
- **Webhooks**: `checkout.session.completed`, `checkout.session.expired`

### Environment Variables
```
RESEND_API_KEY=re_your_api_key_here
STRIPE_MODE=test (switches between test/live)
NEXT_PUBLIC_APP_URL=http://localhost:3000 (for local testing)
```

---

*Last updated: January 2025*
*Status: Active Development*